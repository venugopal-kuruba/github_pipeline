---

name: Workflow For Infra Deployment To Production Environment

on:
  push:
    branches:
      - main
      - master
      - development
      - production

env:
  azure_sub_dev: '9ce91e05-4b9e-4a42-95c1-4385c54920c6'
  azure_sub_prod: '298f2c19-014b-4195-b821-e3d8fc25c2a8'
  TERRAFORM_DESTROY: "NO"
  ENVIRONMENT: "Prod"
  ARM_CLIENT_ID: ${{secrets.ARM_CLIENT_ID}}
  ARM_CLIENT_SECRET: ${{secrets.ARM_CLIENT_SECRET}}
  ARM_SUBSCRIPTION_ID: ${{secrets.ARM_SUBSCRIPTION_ID}}
  ARM_TENANT_ID: ${{secrets.ARM_TENANT_ID}}
  ACTIONS_STEP_DEBUG: true

jobs:
  production-deployment:
    if: github.ref == 'refs/heads/production'
    #runs-on: ubuntu-latest
    runs-on: [self-hosted, B41, terraform]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Print Runner Hostname
      run: hostname
      shell: bash

    - name: Print Runner IP Address
      run: curl -sL https://ipconfig.io
      shell: bash

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.5

    - name: List Repo Files
      id: list_files
      run: |
       ls -al
       pwd
       free
       terraform version

    - name: Terraform Initialize
      id: init
      if: ${{ steps.list_files.exit_code == 0 }}
      run: |
        rm -rf 1.dev-provider.tf
        terraform init && terraform validate && terraform fmt

    - name: Perform Terraform Plan
      if: ${{ steps.init.exit_code == 0 }}
      id: plan
      shell: bash
      run: |
       terraform plan --var-file 16.prod.tfvars

    - name: Terraform Apply
      if: ${{ steps.plan.exit_code == 0 }}
      id: apply
      run: terraform apply --auto-approve --var-file 16.prod.tfvars

    - name: Terraform Destroy
      id: destroy
      run: terraform destroy --auto-approve --var-file 16.prod.tfvars
      if: env.TERRAFORM_DESTROY == 'YES'